@model SensorFusion.ViewModels.NewOperationFormViewModel

@{
	ViewData["Title"] = "Add new Operation";
}


<div class="container">

	<form class="well form-horizontal" enctype="multipart/form-data" asp-controller="home" asp-action="NewOperation" onsubmit="return validateForm();" method="post" id="NewOperationForm">
		<fieldset>

			<!-- Form Name -->
			<legend>Register a new Operation</legend>

			<!-- Select hospital -->

			<div class="form-group">
				<label class="col-md-4 control-label">Select Hospital</label>
				<div class="col-md-4 selectContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-plus"></i></span>
						@Html.DropDownListFor(m => m.hospitalID, Model.hospitals, "Select a hospital...", new { id = "HospitalDropDown", @class = "form-control selectpicker", @onchange = "UpdateRooms()" })
					</div>
				</div>
			</div>
			<!-- Select Room -->

			<div class="form-group">
				<label class="col-md-4 control-label">Operating Room</label>
				<div class="col-md-4 selectContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-home"></i></span>
						@Html.DropDownListFor(m => m.roomNo, Model.rooms, new { id = "RoomDropDown", @class = "form-control selectpicker" })
					</div>
				</div>
			</div>


			<!-- Select patient -->

			<div class="form-group">
				<label class="col-md-4 control-label">Select Patient</label>
				<div class="col-md-4 selectContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
						@Html.DropDownListFor(m => m.patientID, Model.patients, "Select a patient...", new { id = "PatientDropDown", @class = "form-control selectpicker" })
					</div>
				</div>
			</div>


			<!-- Select staff -->

			<div class="form-group">
				<label class="col-md-4 control-label">Select Staff</label>
				<div class="col-md-7 selectContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
						@Html.DropDownListFor(model => model.staffIDs, Model.staff, new { id = "StaffDropDown", multiple = "multiple" })
					</div>
				</div>
			</div>

			<!-- Select type of operation -->

			<div class="form-group">
				<label class="col-md-4 control-label">Type of Operation</label>
				<div class="col-md-4 selectContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
						@Html.DropDownListFor(m => m.operationTypeID, Model.typesOfOperation, "Select the operation type...", new { id = "TypeDropDown", @class = "form-control selectpicker" })
					</div>
				</div>
			</div>






			<!-- Video files upload-->
			<div class="form-group">
				<label class="col-md-4 control-label">Upload the video files</label>
				<div class="col-md-2 inputGroupContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-upload"></i></span>

						<input id="videoFiles" asp-for="videoFiles" type="file" name="videoFiles" multiple />
					</div>
				</div>
			</div>

			<!-- Audio files upload-->
			<div class="form-group">
				<label class="col-md-4 control-label">Upload the audio files</label>
				<div class="col-md-2 inputGroupContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-upload"></i></span>

						<input id="audioFiles" asp-for="audioFiles" type="file" name="audioFiles" multiple />
					</div>
				</div>
			</div>

			<!-- Patients monitoring system upload-->
			<div class="form-group">
				<label class="col-md-4 control-label">Upload the patients monitoring system file</label>
				<div class="col-md-2 inputGroupContainer">
					<div class="input-group">
						<span class="input-group-addon"><i class="glyphicon glyphicon-upload"></i></span>

						<input id="monitorFile" asp-for="monitorFile" type="file" name="monitorFile" multiple />
					</div>
				</div>
			</div>

			<!-- Submit Button -->
			<div class="form-group">
				<label class="col-md-4 control-label"></label>
				<div class="col-md-4">
					<button type="submit" class="btn btn-warning">Submit and Upload <span class="glyphicon glyphicon-send"></span></button>
				</div>
			</div>

		</fieldset>
	</form>
</div>





@section Scripts{

	




<script>
	$(function ()
	{

		$("#StaffDropDown").chosen(
			{
				width: "100%"
			});
		$("#HospitalDropDown").chosen();
		$("#PatientDropDown").chosen();
		$("#TypeDropDown").chosen();
	});

	function validateForm()
	{




		var e = document.getElementById("HospitalDropDown");
		var selected = e.options[e.selectedIndex].text;
		if (selected =="Select a hospital...") {
		alert("Please select a hospital");
		return false;
		}

		var e = document.getElementById("RoomDropDown");
		var selected = e.options[e.selectedIndex].value;
		if (selected=="error") {
		alert("Please select an operating room");
		return false;
		}

		var e = document.getElementById("PatientDropDown");
		var selected = e.options[e.selectedIndex].text;
		if (selected == "Select a patient...") {
		alert("Please select a patient");
		return false;
		}
		var e = document.getElementById("StaffDropDown");
		if (typeof e == "undefined" || e.value == '') {
			alert("Please select the staff that participated in the operation");
			return false;
		}
		var e = document.getElementById("TypeDropDown");
		var selected = e.options[e.selectedIndex].text;
		if (selected == "Select the operation type...") {
		alert("Please select the type of the operation");
		return false;
		}

		var videoFiles = $('input#videoFiles')[0].files;
		var audioFiles = $('input#audioFiles')[0].files;
		var monitorFiles = $('input#monitorFiles')[0].files;

		if (videoFiles.length == 0 && audioFiles.length == 0 && monitorFiles.length == 0) {
		alert("You have to select at least one video file,audio file, or patient's monitoring file");
		return false;
		} else if (videoFiles.length > 3 && audioFiles.length > 3 && monitorFiles.length > 1) {
		alert("You can only upload at maximum 3 video files and 3 audio files and 1 patient monitoring file");
		return false;
		}

		for (var i = 0; i < videoFiles.length; i++) {
			if (!isVideo(videoFiles[i].type)) {
				alert("You have selected at least one unsupported video file");
				return false;
			}
		}
		for (var i = 0; i < audioFiles.length; i++) {
			if (!isAudio(audioFiles[i].type)) {
				alert("You have selected at least one unsupported audio file");
				return false;
			}
		}

		return true;

	}




	function isVideo(type)
	{
		var parts = type.split('/');
		if (parts[0]=='video') {
			return true;
		} else {
			return false;
		}

	}
	function isAudio(type)
	{
		var parts = type.split('/');
		if (parts[0] == 'audio') {
			return true;
		} else {
			return false;
		}

	}






	function UpdateRooms(val)
	{
		var hospitalID = document.getElementById('HospitalDropDown').value;
		$.ajax({
		type: 'GET',
		dataType: "JSON",
		data: { hospitalID },
		url: '@Url.Action("UpdateRooms", "Dynamic")',
		success: function (result) {
		var dropdown = $('#RoomDropDown');
		dropdown.empty();
		dropdown.append($('<option></option>').val("error").html("Please select a room..."));
		$.each(result, function (i, room) {
		dropdown.append($('<option></option>').val(room.roomNO).html(room.roomNO));
		});

		}
		});

	}
</script>







}

























