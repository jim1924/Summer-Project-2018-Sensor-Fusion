
@model SensorFusion.ViewModels.SingleOperationViewModel
@{
	ViewData["Title"] = "Details";
}


<div class="container">
	<h2>Operation with operation ID: @Model.operationID</h2>
	<table class="table table-bordered table-striped">
		<tr>
			<th>Properties</th>
			<th>Details</th>
		</tr>
		<tr>
			<td>Patient's full name</td>
			<td>@Model.patient.firstName @Model.patient.lastName</td>
		</tr>
		<tr>
			<td>Hospital</td>
			<td>@Model.hospitalName</td>
		<tr>
			<td>Operating Room Number</td>
			<td>@Model.roomNO</td>
		</tr>
		<tr>
			<td>Date started</td>
			<td>@Model.date</td>
		</tr>
		<tr>
			<td>Duration</td>
			@{
				if (Model.duration <= 1)
				{
					decimal duration = Math.Round((decimal)Model.duration * 60, 2);
					<td>@duration seconds</td>
				}
				else if (Model.duration > 60)
				{
					decimal duration = Math.Round((decimal)Model.duration / 60, 2);
					<td>@duration hours</td>
				}
				else
				{
					decimal duration = Math.Round((decimal)Model.duration, 2);
					<td>@duration minutes</td>
				}
			}
		</tr>
		<tr>
			<td>Type of operation</td>
			<td>@Model.type</td>
		</tr>
		<tr>
			<td>Staff participated</td>
			<td>@Model.staff</td>
		</tr>
		@{
			var i = 1;
			foreach (var video in Model.videoFiles)
			{
				<tr>
					<td><b>Video source: @i</b></td>
					<td><a href=@video.fullPath>@video.fullPath </a></td>
				</tr>
				<tr>
					<td>Video duration</td>
					@{
						if (video.duration / 1000 <= 60)
						{
							decimal duration = Math.Round((decimal)video.duration / 1000, 2);
							<td>@duration seconds</td>
						}
						else if (video.duration / 1000 / 60 <= 60)
						{
							decimal duration = Math.Round((decimal)video.duration / 1000 / 60, 2);
							<td>@duration minutes</td>
						}
						else
						{
							decimal duration = Math.Round((decimal)video.duration / 1000 / 60 / 60, 2);
							<td>@duration hours</td>
						}
					}
				</tr>
				<tr>
					<td>Size</td>
					@{
						if (video.size_bytes <= 1024)
						{
							<td>@video.size_bytes bytes</td>
						}
						else if (video.size_bytes < 1048576)
						{
							decimal size = Math.Round((decimal)video.size_bytes / 1024, 2);
							<td>@size Kb</td>
						}
						else if (video.size_bytes < 1073741824)
						{
							decimal size = Math.Round((decimal)video.size_bytes / 1024 / 1024, 2);
							<td>@size Mb</td>
						}
						else if (video.size_bytes < 1099511627776)
						{
							decimal size = Math.Round((decimal)video.size_bytes / 1024 / 1024 / 1024, 2);
							<td>@size Gb</td>
						}
					}
				</tr>
				<tr>
					<td>Encoded Date</td>
					<td>@video.timeStamp </td>
				<tr>
					<td>Type</td>
					<td>@video.type </td>
				</tr>
				</tr>
				i = i + 1;
			}
		}

		@{
			var counter = 1;
			foreach (var audio in Model.audioFiles)
			{
				<tr>
					<td><b>Audio source: @counter</b></td>
					<td><a href=@audio.fullPath>@audio.fullPath </a></td>
				</tr>
				<tr>
					<td>Audio duration</td>
					@{
						if (audio.duration / 1000 <= 60)
						{
							decimal duration = Math.Round((decimal)audio.duration / 1000, 2);
							<td>@duration seconds</td>
						}
						else if (audio.duration / 1000 / 60 <= 60)
						{
							decimal duration = Math.Round((decimal)audio.duration / 1000 / 60, 2);
							<td>@duration minutes</td>
						}
						else
						{
							decimal duration = Math.Round((decimal)audio.duration / 1000 / 60 / 60, 2);
							<td>@duration hours</td>
						}
					}
				</tr>
				<tr>
					<td>Size</td>
					@{
						if (audio.size_bytes <= 1024)
						{
							<td>@audio.size_bytes bytes</td>
						}
						else if (audio.size_bytes < 1048576)
						{
							decimal size = Math.Round((decimal)audio.size_bytes / 1024, 2);
							<td>@size Kb</td>
						}
						else if (audio.size_bytes < 1073741824)
						{
							decimal size = Math.Round((decimal)audio.size_bytes / 1024 / 1024, 2);
							<td>@size Mb</td>
						}
						else if (audio.size_bytes < 1099511627776)
						{
							decimal size = Math.Round((decimal)audio.size_bytes / 1024 / 1024 / 1024, 2);
							<td>@size Gb</td>
						}
					}
				</tr>
				<tr>
					<td>Encoded Date</td>
					<td>@audio.timeStamp </td>
				</tr>
				<tr>
					<td>Type</td>
					<td>@audio.type </td>
				</tr>

				counter = counter + 1;
			}
		}

		@{
			if(Model.patientsMonitoringFile.timeStamp!=new DateTime())
			{
				<tr>
					<td><b>Patient's monitoring file</b></td>
					<td><a href=@Model.patientsMonitoringFile.fullPath> @Model.patientsMonitoringFile.fullPath </a></td>
				</tr>
				<tr>
					<td>Size</td>
					@{
						if (Model.patientsMonitoringFile.size_bytes <= 1024)
						{
							<td>@Model.patientsMonitoringFile.size_bytes bytes</td>
						}
						else if (Model.patientsMonitoringFile.size_bytes < 1048576)
						{
							decimal size = Math.Round((decimal)Model.patientsMonitoringFile.size_bytes / 1024, 2);
							<td>@size Kb</td>
						}
						else if (Model.patientsMonitoringFile.size_bytes < 1073741824)
						{
							decimal size = Math.Round((decimal)Model.patientsMonitoringFile.size_bytes / 1024 / 1024, 2);
							<td>@size Mb</td>
						}
						else if (Model.patientsMonitoringFile.size_bytes < 1099511627776)
						{
							decimal size = Math.Round((decimal)Model.patientsMonitoringFile.size_bytes / 1024 / 1024 / 1024, 2);
							<td>@size Gb</td>
						}
					}
				</tr>
				<tr>
					<td>Encoded Date</td>
					<td>@Model.patientsMonitoringFile.timeStamp </td>
				</tr>
				<tr>
					<td>Type</td>
					<td>@Model.patientsMonitoringFile.type </td>
				</tr>

				counter = counter + 1;
			}
		}

	</table>
</div>